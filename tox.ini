[tox]
envlist = py39,py310,py311,py312,py313,lint,type-check,docs,security,complexity
skip_missing_interpreters = True

[testenv]
# Skip automatic packaging since this is a monorepo workspace
skip_install = True
changedir = {toxinidir}
# Install packages in editable mode
deps =
    -e ./packages/restmachine[dev]
    -e ./packages/restmachine-aws[dev]
    -e ./packages/restmachine-orm[dev]
    -e ./packages/restmachine-orm-dynamodb[test]
commands =
    # Run core restmachine tests (exclude performance tests by default)
    pytest packages/restmachine/tests -m 'not performance' --cov=packages/restmachine/src --cov-report=xml --cov-report=term --cov-config=pyproject.toml
    # Run ORM tests
    pytest packages/restmachine-orm/tests -m 'not performance' --cov=packages/restmachine-orm/src --cov-append --cov-report=term --cov-config=pyproject.toml
    # Run DynamoDB backend tests
    pytest packages/restmachine-orm-dynamodb/tests -v --cov=packages/restmachine-orm-dynamodb/src --cov-append --cov-report=term --cov-config=pyproject.toml

[testenv:lint]
skip_install = True
deps =
    ruff
commands =
    ruff check --fix packages/restmachine/src
    ruff check --fix packages/restmachine-aws/src
    ruff check --fix packages/restmachine-orm/src
    ruff check --fix packages/restmachine-orm-dynamodb/src
    ruff check --fix examples

[testenv:lint-tests]
# Separate environment for linting tests (includes tests directory)
skip_install = True
deps =
    ruff
commands =
    ruff check --fix packages/restmachine/src
    ruff check --fix packages/restmachine/tests
    ruff check --fix packages/restmachine-aws/src
    ruff check --fix packages/restmachine-aws/tests
    ruff check --fix packages/restmachine-orm/src
    ruff check --fix packages/restmachine-orm/tests
    ruff check --fix packages/restmachine-orm-dynamodb/src
    ruff check --fix packages/restmachine-orm-dynamodb/tests
    ruff check --fix examples

[testenv:format]
skip_install = True
deps =
    ruff
commands =
    ruff format packages/restmachine/src
    ruff format packages/restmachine-aws/src
    ruff format packages/restmachine-orm/src
    ruff format packages/restmachine-orm-dynamodb/src
    ruff format examples

[testenv:type-check]
skip_install = True
deps =
    mypy
    types-setuptools
    pydantic>=2.0.0
    uvicorn
    hypercorn
    jinja2
    anyio>=3.0.0
    boto3>=1.26.0
    pytest>=7.0.0
    # Install all packages so mypy can resolve cross-package imports
    -e ./packages/restmachine
    -e ./packages/restmachine-aws
    -e ./packages/restmachine-orm
    -e ./packages/restmachine-orm-dynamodb
changedir = {toxinidir}
setenv =
    MYPYPATH = packages/restmachine/src:packages/restmachine-aws/src:packages/restmachine-orm/src:packages/restmachine-orm-dynamodb/src
commands =
    mypy packages/restmachine/src/restmachine --exclude restmachine/testing --check-untyped-defs
    mypy packages/restmachine-aws/src/restmachine_aws --check-untyped-defs
    mypy packages/restmachine-orm/src/restmachine_orm --check-untyped-defs
    mypy packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --check-untyped-defs 

[testenv:docs]
skip_install = True
deps =
    mkdocs-material>=9.0.0
    mkdocstrings[python]>=0.24.0
    mkdocs-mermaid2-plugin>=1.0.0
    mkdocs-monorepo-plugin>=1.0.0
    mike>=2.0.0
commands =
    mkdocs build --strict --verbose

[testenv:build]
skip_install = True
deps =
    build
    twine
changedir = {toxinidir}
commands =
    python -m build packages/restmachine
    python -m build packages/restmachine-aws
    python -m build packages/restmachine-orm
    python -m build packages/restmachine-orm-dynamodb
    twine check packages/restmachine/dist/*
    twine check packages/restmachine-aws/dist/*
    twine check packages/restmachine-orm/dist/*
    twine check packages/restmachine-orm-dynamodb/dist/*

[testenv:clean]
skip_install = True
deps =
commands =
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('restmachine.egg-info', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine/dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine/build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-aws/dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-aws/build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-orm/dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-orm/build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-orm-dynamodb/dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-orm-dynamodb/build', ignore_errors=True)"

# Security scanning environments
[testenv:security]
skip_install = True
deps =
    bandit[sarif]
    pip-audit
    detect-secrets
commands =
    bandit -r packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb -f sarif -o bandit-report.sarif
    bandit -r packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb -f txt
    pip-audit --skip-editable --ignore-vuln GHSA-4xh5-x5gv-qwph --format=markdown --output=pip-audit-report.md
    pip-audit --skip-editable --ignore-vuln GHSA-4xh5-x5gv-qwph --format=columns
    detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.json$' --exclude-files '.*\.lock$'

[testenv:bandit]
skip_install = True
deps =
    bandit[sarif]
commands =
    bandit -r packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb -f txt
    bandit -r packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb -f sarif -o bandit-report.sarif

[testenv:pip-audit]
skip_install = True
deps =
    pip-audit
commands =
    pip-audit --skip-editable --ignore-vuln GHSA-4xh5-x5gv-qwph --format=columns
    pip-audit --skip-editable --ignore-vuln GHSA-4xh5-x5gv-qwph --format=markdown --output=pip-audit-report.md

[testenv:secrets]
skip_install = True
deps =
    detect-secrets
commands =
    detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.json$' --exclude-files '.*\.lock$'

[testenv:semgrep]
skip_install = True
deps =
    semgrep
commands =
    semgrep --config=auto --json --output=semgrep-report.json packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb
    semgrep --config=auto packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb

# Code quality and complexity environments
[testenv:complexity]
skip_install = True
deps =
    radon>=6.0.0
changedir = {toxinidir}
commands =
    # Cyclomatic Complexity - fail if average complexity > B (10)
    radon cc packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --total-average --show-complexity --min B
    # Maintainability Index - fail if any file is below B (65)
    radon mi packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --min B --show
    # Raw metrics for informational purposes
    radon raw packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --summary

[testenv:complexity-report]
# Generate detailed complexity reports
skip_install = True
deps =
    radon>=6.0.0
changedir = {toxinidir}
commands =
    # Full complexity report with all details
    radon cc packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --total-average --show-complexity --json --output-file=complexity-report.json
    radon cc packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --total-average --show-complexity
    # Full maintainability index report
    radon mi packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --show --json --output-file=maintainability-report.json
    radon mi packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb --show
    # Detailed raw metrics
    radon raw packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws packages/restmachine-orm/src/restmachine_orm packages/restmachine-orm-dynamodb/src/restmachine_orm_dynamodb

# Performance testing environments
[testenv:benchmark]
# Run benchmarks and save baselines (direct driver only - fastest)
skip_install = True
deps =
    pytest-benchmark>=4.0.0
    -e ./packages/restmachine[dev]
    -e ./packages/restmachine-aws[dev]
    -e ./packages/restmachine-orm[dev]
    -e ./packages/restmachine-orm-dynamodb[test]
changedir = {toxinidir}
commands =
    # Run performance tests with autosave (direct driver only)
    # Override default -m 'not performance' to explicitly run performance tests
    # Group by function name so same test across drivers appears together
    pytest packages/restmachine/tests/performance -v -m performance --benchmark-autosave --benchmark-group-by=func --benchmark-columns=min,mean,median --benchmark-storage=file://packages/restmachine/tests/performance/baselines

[testenv:benchmark-all]
# Run benchmarks across ALL drivers (direct, aws)
# Groups results by function so you can compare same test across all drivers
skip_install = True
deps =
    pytest-benchmark>=4.0.0
    -e ./packages/restmachine[dev]
    -e ./packages/restmachine-aws[dev]
    -e ./packages/restmachine-orm[dev]
    -e ./packages/restmachine-orm-dynamodb[test]
changedir = {toxinidir}
commands =
    # Run ALL performance tests across all drivers, grouped by function name
    pytest -m performance --benchmark-only --benchmark-autosave --benchmark-group-by=func --benchmark-columns=min,mean,median --benchmark-sort=name --benchmark-storage=file://packages/restmachine/tests/performance/baselines

[testenv:benchmark-compare]
# Compare benchmarks against saved baselines
skip_install = True
deps =
    pytest-benchmark>=4.0.0
    -e ./packages/restmachine[dev]
    -e ./packages/restmachine-aws[dev]
    -e ./packages/restmachine-orm[dev]
    -e ./packages/restmachine-orm-dynamodb[test]
changedir = {toxinidir}
commands =
    # Compare against baselines and fail if performance degrades > 5%
    pytest packages/restmachine/tests/performance -v -m performance --benchmark-compare --benchmark-compare-fail=min:5% --benchmark-group-by=func --benchmark-columns=min,mean,median --benchmark-storage=file://packages/restmachine/tests/performance/baselines

[testenv:benchmark-verbose]
# Run benchmarks with detailed statistics
skip_install = True
deps =
    pytest-benchmark>=4.0.0
    -e ./packages/restmachine[dev]
    -e ./packages/restmachine-aws[dev]
    -e ./packages/restmachine-orm[dev]
    -e ./packages/restmachine-orm-dynamodb[test]
changedir = {toxinidir}
commands =
    # Run with verbose statistics and histogram (all columns)
    pytest packages/restmachine/tests/performance -v -m performance --benchmark-autosave --benchmark-histogram --benchmark-group-by=func --benchmark-storage=file://packages/restmachine/tests/performance/baselines

[pytest]
# Pytest configuration is now in pyproject.toml at the root
# and in individual package pyproject.toml files
