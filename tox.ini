[tox]
envlist = py38,py39,py310,py311,py312,lint,type-check,docs,security
skip_missing_interpreters = True

[testenv]
deps = -rrequirements-dev.txt

[testenv:lint]
deps =
    ruff
commands =
    ruff check --fix restmachine tests examples

[testenv:format]
deps =
    ruff
commands =
    ruff format restmachine tests examples

[testenv:type-check]
deps =
    mypy
    types-setuptools
    pydantic>=2.0.0
commands =
    mypy restmachine

[testenv:docs]
deps = 
    sphinx
    sphinx-rtd-theme
    sphinx-autodoc-typehints
commands = 
    sphinx-build -W -b html docs docs/_build/html

[testenv:build]
deps = 
    build
    twine
commands = 
    python -m build
    twine check dist/*

[testenv:clean]
deps =
commands =
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('restmachine.egg-info', ignore_errors=True)"

# Security scanning environments
[testenv:security]
deps =
    bandit[toml]
    pip-audit
    detect-secrets
commands =
    bandit -r restmachine/ -f json -o bandit-report.json
    bandit -r restmachine/ -f txt
    pip-audit --format=json --output=pip-audit-report.json
    pip-audit --format=columns
    detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.json$' --exclude-files '.*\.lock$'

[testenv:bandit]
deps =
    bandit[toml]
commands =
    bandit -r restmachine/ -f txt
    bandit -r restmachine/ -f json -o bandit-report.json

[testenv:pip-audit]
deps =
    pip-audit
commands =
    pip-audit --format=columns
    pip-audit --format=json --output=pip-audit-report.json

[testenv:secrets]
deps =
    detect-secrets
commands =
    detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.json$' --exclude-files '.*\.lock$'

[testenv:semgrep]
deps =
    semgrep
commands =
    semgrep --config=auto --json --output=semgrep-report.json restmachine/
    semgrep --config=auto restmachine/

[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --tb=short
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
