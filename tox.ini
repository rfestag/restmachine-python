[tox]
envlist = py39,py310,py311,py312,lint,type-check,docs,security
skip_missing_interpreters = True

[testenv]
# Skip automatic packaging since this is a monorepo workspace
skip_install = True
changedir = {toxinidir}
# Install packages in editable mode
deps =
    -e ./packages/restmachine[dev]
    -e ./packages/restmachine-aws[dev]
commands =
    pytest packages/restmachine/tests -v
    pytest packages/restmachine-aws/tests -v

[testenv:lint]
skip_install = True
deps =
    ruff
commands =
    ruff check --fix packages/restmachine/src
    ruff check --fix packages/restmachine-aws/src
    ruff check --fix examples

[testenv:lint-tests]
# Separate environment for linting tests (includes tests directory)
skip_install = True
deps =
    ruff
commands =
    ruff check --fix packages/restmachine/src
    ruff check --fix packages/restmachine/tests
    ruff check --fix packages/restmachine-aws/src
    ruff check --fix packages/restmachine-aws/tests
    ruff check --fix examples

[testenv:format]
skip_install = True
deps =
    ruff
commands =
    ruff format packages/restmachine/src
    ruff format packages/restmachine-aws/src
    ruff format examples

[testenv:type-check]
skip_install = True
deps =
    mypy
    types-setuptools
    pydantic>=2.0.0
    uvicorn
    hypercorn
    jinja2
changedir = {toxinidir}
setenv =
    MYPYPATH = packages/restmachine/src
commands =
    mypy packages/restmachine/src/restmachine --exclude restmachine/testing --check-untyped-defs
    mypy packages/restmachine-aws/src/restmachine_aws --check-untyped-defs 

[testenv:docs]
skip_install = True
deps =
    sphinx
    sphinx-rtd-theme
    sphinx-autodoc-typehints
commands =
    sphinx-build -W -b html docs docs/_build/html

[testenv:build]
skip_install = True
deps =
    build
    twine
changedir = {toxinidir}
commands =
    python -m build packages/restmachine
    python -m build packages/restmachine-aws
    twine check packages/restmachine/dist/*
    twine check packages/restmachine-aws/dist/*

[testenv:clean]
skip_install = True
deps =
commands =
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('restmachine.egg-info', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine/dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine/build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-aws/dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('packages/restmachine-aws/build', ignore_errors=True)"

# Security scanning environments
[testenv:security]
skip_install = True
deps =
    bandit[toml]
    pip-audit
    detect-secrets
commands =
    bandit -r packages/restmachine/src/restmachine -f json -o bandit-report.json
    bandit -r packages/restmachine/src/restmachine -f txt
    bandit -r packages/restmachine-aws/src/restmachine_aws -f txt
    pip-audit --skip-editable --ignore-vuln GHSA-4xh5-x5gv-qwph --format=json --output=pip-audit-report.json
    pip-audit --skip-editable --ignore-vuln GHSA-4xh5-x5gv-qwph --format=columns
    detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.json$' --exclude-files '.*\.lock$'

[testenv:bandit]
skip_install = True
deps =
    bandit[toml]
commands =
    bandit -r packages/restmachine/src/restmachine -f txt
    bandit -r packages/restmachine-aws/src/restmachine_aws -f txt
    bandit -r packages/restmachine/src/restmachine -f json -o bandit-report.json

[testenv:pip-audit]
skip_install = True
deps =
    pip-audit
commands =
    pip-audit --format=columns
    pip-audit --format=json --output=pip-audit-report.json

[testenv:secrets]
skip_install = True
deps =
    detect-secrets
commands =
    detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.json$' --exclude-files '.*\.lock$'

[testenv:semgrep]
skip_install = True
deps =
    semgrep
commands =
    semgrep --config=auto --json --output=semgrep-report.json packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws
    semgrep --config=auto packages/restmachine/src/restmachine packages/restmachine-aws/src/restmachine_aws

[pytest]
# Pytest configuration is now in pyproject.toml at the root
# and in individual package pyproject.toml files
