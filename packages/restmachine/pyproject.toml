[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "restmachine"
version = "0.1.0"
description = "A lightweight REST framework with dependency injection and webmachine-style state machine"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Ryan Festag", email = "rfestag@gmail.com"}
]
keywords = ["rest", "api", "framework", "webmachine", "state-machine", "dependency-injection"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "jinja2>=3.0.0",
    "anyio>=3.0.0",  # Required for async/sync bridge in startup_sync/shutdown_sync
]

[project.optional-dependencies]
validation = [
    "pydantic>=2.0.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-benchmark>=4.0.0",
    "requests>=2.25.0",  # For test framework HTTP client
    "pydantic>=2.0.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-benchmark>=4.0.0",
    "ruff",
    "mypy",
    "openapi-spec-validator>=0.7.0",
    "requests>=2.25.0",
    "pydantic>=2.0.0",
    "genbadge[coverage]>=1.1.0",
    "radon>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/rfestag/restmachine-python"
Repository = "https://github.com/rfestag/restmachine-python"
"Bug Reports" = "https://github.com/rfestag/restmachine-python/issues"

[tool.setuptools.packages.find]
where = ["src", "tests"]
include = ["restmachine*", "tests*"]
exclude = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
# Exclude performance tests by default (use -m performance to run them)
addopts = "-v --tb=short -m 'not performance'"
markers = [
    "performance: Performance benchmark tests (deselect with '-m \"not performance\"')",
]

[tool.pytest.benchmark]
# Store separate baselines for each driver in performance/baselines/
min_rounds = 5
max_time = 1.0
calibration_precision = 10
warmup = true
