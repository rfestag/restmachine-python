name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans on Monday at 9am UTC
    - cron: '0 9 * * 1'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
        
    - name: Test with tox
      run: tox
      
    - name: Generate coverage badge
      if: matrix.python-version == '3.13' && github.ref == 'refs/heads/main'
      run: |
        pip install genbadge[coverage]
        genbadge coverage -i coverage.xml -o coverage-badge.svg

    - name: Generate complexity badge
      if: matrix.python-version == '3.13' && github.ref == 'refs/heads/main'
      run: |
        pip install radon anybadge
        python scripts/generate_complexity_badge.py

    - name: Commit badges
      if: matrix.python-version == '3.13' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add coverage-badge.svg complexity-badge.svg || true
        git diff --staged --quiet || git commit -m "Update badges [skip ci]"
        git push || true

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
        
    - name: Lint with tox
      run: tox -e lint
      
  type-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Type check with tox
      run: tox -e type-check

  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Run security scans
      run: tox -e security

    - name: Verify SARIF file exists
      if: always()
      run: |
        if [ -f bandit-report.sarif ]; then
          echo "✅ SARIF file generated successfully"
          cat bandit-report.sarif | python3 -m json.tool > /dev/null && echo "✅ SARIF file is valid JSON"
          ls -lh bandit-report.sarif
        else
          echo "❌ SARIF file not found"
          ls -la | grep -i sarif || echo "No SARIF files found"
          exit 1
        fi

    - name: Upload Bandit SARIF results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: bandit-report.sarif
        category: bandit

    - name: Upload pip-audit markdown report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pip-audit-report
        path: pip-audit-report.md

    - name: Upload security reports as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.sarif
          pip-audit-report.md

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, type-check, security]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ github.sha }}
        path: dist/
        retention-days: 30
