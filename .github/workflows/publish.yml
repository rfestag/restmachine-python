name: Publish to PyPI

on:
  push:
    tags:
      - 'restmachine-*'
      - 'restmachine-aws-*'
      - 'restmachine-web-*'

jobs:
  detect-package:
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.detect.outputs.package }}
      package-dir: ${{ steps.detect.outputs.package-dir }}
      version: ${{ steps.detect.outputs.version }}
    steps:
      - name: Detect package from tag
        id: detect
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Tag: $TAG"

          if [[ "$TAG" =~ ^restmachine-web-(.+)$ ]]; then
            echo "package=restmachine-web" >> $GITHUB_OUTPUT
            echo "package-dir=packages/restmachine-web" >> $GITHUB_OUTPUT
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          elif [[ "$TAG" =~ ^restmachine-aws-(.+)$ ]]; then
            echo "package=restmachine-aws" >> $GITHUB_OUTPUT
            echo "package-dir=packages/restmachine-aws" >> $GITHUB_OUTPUT
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          elif [[ "$TAG" =~ ^restmachine-(.+)$ ]]; then
            echo "package=restmachine" >> $GITHUB_OUTPUT
            echo "package-dir=packages/restmachine" >> $GITHUB_OUTPUT
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "Error: Tag '$TAG' does not match expected format"
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: detect-package
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Required for setuptools_scm to work properly

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools-scm

      - name: Build package
        run: |
          cd ${{ needs.detect-package.outputs.package-dir }}
          python -m build

      - name: Check package
        run: |
          cd ${{ needs.detect-package.outputs.package-dir }}
          twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ needs.detect-package.outputs.package }}-${{ github.sha }}
          path: ${{ needs.detect-package.outputs.package-dir }}/dist/

  publish:
    runs-on: ubuntu-latest
    needs: [detect-package, build]
    permissions:
      contents: read
      id-token: write  # Required for trusted publishing
    environment:
      name: pypi
      url: https://pypi.org/p/${{ needs.detect-package.outputs.package }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ needs.detect-package.outputs.package }}-${{ github.sha }}
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
