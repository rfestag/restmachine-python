name: Documentation (Versioned)

on:
  push:
    branches: [ main ]
    tags:
      - 'restmachine-[0-9]*'  # Trigger on version tags like restmachine-1.0.0
  workflow_dispatch:

permissions:
  contents: write  # Need write permission for gh-pages branch

jobs:
  deploy-docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Fetch all history for git describe

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs-material mkdocstrings[python] mkdocs-mermaid2-plugin mkdocs-monorepo-plugin mike

    - name: Configure git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Determine version and deployment strategy
      id: version
      run: |
        if [[ "${GITHUB_REF}" =~ refs/tags/restmachine-[0-9] ]]; then
          # Extract version from tag (e.g., restmachine-1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/restmachine-}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "is_release=true" >> $GITHUB_OUTPUT
          echo "🏷️  Deploying release version: ${VERSION}"
        else
          # Development version from main branch
          echo "version=dev" >> $GITHUB_OUTPUT
          echo "is_release=false" >> $GITHUB_OUTPUT
          echo "🔧 Deploying development version"
        fi

    - name: Deploy development docs
      if: steps.version.outputs.is_release == 'false'
      run: |
        echo "📚 Deploying dev documentation..."
        mike deploy --push --update-aliases dev development
        echo "✅ Dev docs deployed at: https://rfestag.github.io/restmachine-python/dev/"

    - name: Deploy release docs
      if: steps.version.outputs.is_release == 'true'
      run: |
        VERSION=${{ steps.version.outputs.version }}
        echo "📚 Deploying version ${VERSION} documentation..."

        # Deploy this version and update aliases
        mike deploy --push --update-aliases ${VERSION} latest stable

        # Set as default version (what users see at root URL)
        mike set-default --push latest

        echo "✅ Release docs deployed:"
        echo "   - Version: https://rfestag.github.io/restmachine-python/${VERSION}/"
        echo "   - Latest:  https://rfestag.github.io/restmachine-python/latest/"
        echo "   - Default: https://rfestag.github.io/restmachine-python/"

    - name: List deployed versions
      run: |
        echo "📋 Currently deployed versions:"
        mike list
